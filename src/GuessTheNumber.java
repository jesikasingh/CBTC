
//Question:-
// The fun and easy project "Guess the no" is a short java project that allow the user to guess the number generated by
// the computer and involves the following steps.
// 1. The system generated a random number from a given range, say 1 to 100.
// 2. The user is prompted to enter their given number in a displayed dialogue box.
// 3. The computer then tells if the entered number matches the guesses number ,or it is higher/lower than the generated number.
// 4. The game continues under the user guessing the number. You can also incorporate further details as:
//   *Limiting the number of attempts.
//   *Adding more rounds.
//   *Displaying score.
//  *Giving points based on the number of attempts.




import java.util.Random;  // //is used for generating the random number.
//import javax.swing.*;
import javax.swing.JOptionPane;  //create a dialog box
//JOptionPane used for taking input from user & display output:
public class GuessTheNumber {
    public static void main(String[] args) {
        Random random = new Random();     //for generate random no


        int finalScore = 0;     //initialize finalScore(finalScore tracks the score across multiple rounds)
        boolean OtherRound = true;


        while (OtherRound) {


            JOptionPane.showMessageDialog(null, "Problem 1: Guess the Number ");


            //take input of maximum no of guess
            String maxGuessStr = JOptionPane.showInputDialog("please enter the maximum number of Guess: ");
            int maxGuess = Integer.parseInt(maxGuessStr);


            //random.nextInt(100)  generate no from 0 to 99
            int numberToGuess = random.nextInt(100) + 1;     //random no between, 1 to 100
            int noOfGuess = 0;
            boolean isGuessedCorrect = false;


            JOptionPane.showMessageDialog(null, "Enter the no between 1 and 100 , which we want to guess: ");


            while (noOfGuess < maxGuess && !isGuessedCorrect) {
                String userGuessStr = JOptionPane.showInputDialog("Enter your guess: ");
                int userGuess = Integer.parseInt(userGuessStr);
                noOfGuess++;


                // Compare the input  guess number to the generated guess number
                if (userGuess == numberToGuess) {
                    isGuessedCorrect = true;
                    int points = findPoints(noOfGuess, maxGuess);
                    finalScore += points;
                    JOptionPane.showMessageDialog(null, " we have guessed the number.");
                    JOptionPane.showMessageDialog(null, "we take " + noOfGuess + " guess.");
                    JOptionPane.showMessageDialog(null, "we found " + points + " points.");
                } else if (userGuess < numberToGuess) {
                    JOptionPane.showMessageDialog(null, "The number is higher than our guess no.");
                } else {
                    JOptionPane.showMessageDialog(null, "The number is lower than our guess no.");
                }
            }


            if (!isGuessedCorrect) {
                JOptionPane.showMessageDialog(null, "here we use all guess. The number is " + numberToGuess );
            }


            JOptionPane.showMessageDialog(null, " final score : " + finalScore);
            int response = JOptionPane.showConfirmDialog(null, "Do you want to another rounds ?", " Other Round", JOptionPane.YES_NO_OPTION);
            OtherRound = (response == JOptionPane.YES_OPTION);
        }


        JOptionPane.showMessageDialog(null, " Final score is: " + finalScore);
    }


    private static int findPoints(int Guess, int maxGuess) {
        return (maxGuess - Guess + 1) * 10;   // max score is 100, in every round decrease the score by 10
    }
}
